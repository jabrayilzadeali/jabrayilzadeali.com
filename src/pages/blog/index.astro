---
import { getCollection } from "astro:content"
import FormattedDate from "../../components/FormattedDate.astro"
import BaseLayout from "../../layouts/BaseLayout.astro"

import Tags from "../../components/Tags.astro"
import { slugify } from "../../ts/utils"

const posts = (await getCollection("blog")).sort(
    (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
)

const uniqueTags: string[] = [
    ...new Set(posts.flatMap(article => article.data.tags.map(tag => slugify(tag)))),
]
// console.log(uniqueTags)

// let tag_param = Astro.url.searchParams.get('tag')! || ""
// console.log("---------------------the tag param: ", tag_param)

// const filtered_posts = tag_param !== "" ? posts.filter(post => post.data.tags.includes(tag_param)): posts

// console.log(posts)
// console.log(new_posts)
---

<BaseLayout>
    <main>
        <section>
            <div class="my-10">
				<Tags tags={uniqueTags} />
			</div>
            <ul class="grid sm:grid-cols-2 lg:grid-cols-3 gap-5">
                {
                    posts.map(post => (
                        <li class="">
                            <a href={`/blog/${post.slug}/`}>
                                <img
                                    width={720}
                                    height={360}
                                    src={post.data.heroImage}
                                    class="rounded-xl"
                                    alt=""
                                />
                                <h4 class="pt-4 text-xl font-bold">
                                    {post.data.title}
                                </h4>
                            </a>
                            <p class="date pt-1 text-sm mb-2">
                                <FormattedDate date={post.data.pubDate} />
                            </p>
                            <Tags tags={post.data.tags} />
                        </li>
                    ))
                }
            </ul>
        </section>
    </main>
</BaseLayout>